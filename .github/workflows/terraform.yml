name: terraform

on: 
  push:
    branches:
      - CambialoAtuRama #cambialo a la rama que quierea que desate este flujo  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: build a ec2 with terraform 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd infraestructura_tf
          terraform init
          terraform apply -auto-approve

      - name: obtener ip
        uses: dflook/terraform-output@v1
        id: ip_publica
        with:
          path: infraestructura_tf
      
      - name: Guardar la ip 
        run:  echo "IP_PUBLICA=${{ steps.ip_publica.outputs.ip_publica }}" >> $GITHUB_ENV


      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker docker-compose

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PASSWORD_SERVER }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy files to server
        run: |
          rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./prueba3-practica ${{ secrets.USER_SERVER }}@${{ env.IP_PUBLICA }}:/home/ubuntu/donjose/

      - name: pausa para esperar termino de instalacion Docker y docker-compose
        run: sleep 30

      - name: SSH commands to deploy
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{secrets.USER_SERVER}}@${{ env.IP_PUBLICA }} << 'EOF'
          cd /home/ubuntu/donjose/prueba3-practica
          sudo usermod -aG docker $USER
          sudo newgrp docker
          docker-compose down
          docker-compose up -d --build
          EOF
      
      - name: Imprimir IP
        run: echo "La IP de la mÃ¡quina es $IP_PUBLICA para acceder a la pagina "